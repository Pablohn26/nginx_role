---

- name: NGINX | Installing dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items: "{{ required_libs }}"
  tags:
    skip_ansible_lint

- name: NGINX | Check nginx version
  command: nginx -v
  register: nginx_check
  changed_when: false
  ignore_errors: true

- name: NGINX | Download headers-more module
  get_url:
    url: "{{ headers_more_url }}"
    dest: /tmp
    validate_certs: no
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'

- name: NGINX | Untar headers-more
  unarchive:
    copy: no
    src: /tmp/headers-more-nginx-module-{{ headers_more_version }}.tar.gz
    dest: /tmp
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'

- name: NGINX | Download lua module
  get_url:
    url: "{{ lua_module_url }}"
    dest: /tmp
    validate_certs: no
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'

- name: NGINX | Untar lua module
  unarchive:
    copy: no
    src: /tmp/lua-nginx-module-{{ lua_module_version }}.tar.gz
    dest: /tmp
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'

- name: NGINX | Download nginx
  get_url:
    url: "{{ nginx_url }}"
    dest: /tmp
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'

- name: NGINX | Untar nginx
  unarchive:
    copy: no
    src: /tmp/nginx-{{ nginx_version }}.tar.gz
    dest: /tmp
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'

- name: NGINX | Define compile-time options
  set_fact:
    nginx_compile_time_options_str: "{{ nginx_compile_time_options_str | default('') }} {{ '--' + item.option + '=' + item.value }}"
  with_items:
    - "{{ nginx_compile_time_options }}"

- name: NGINX | Define builtin modules options
  set_fact:
    nginx_compile_time_options_builtin_modules_str: "{{ nginx_compile_time_options_builtin_modules_str | default('') }} {{ '--with-' + item }}"
  with_items:
    - "{{ nginx_compile_time_options_builtin_modules }}"

- name: NGINX | Define External modules options
  set_fact:
    nginx_compile_time_options_external_modules_paths_str: "{{ nginx_compile_time_options_external_modules_paths_str | default('') }} {{ '--add-module=' + item }}"
  with_items:
    - "{{ nginx_compile_time_options_external_modules_paths }}"

# - name: NGINX | Install nginx
#   command: "chdir=/tmp/nginx-{{ nginx_version }} {{item}}"
#   with_items:
#     - "./configure {{ nginx_compile_time_options_str }} {{ nginx_compile_time_options_builtin_modules_str }} {{ nginx_compile_time_options_external_modules_paths_str }}"
#     - make
#     - make install
#   when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'
#   notify: restart nginx

- name: NGINX | Configure install
  command: ./configure {{ nginx_compile_time_options_str }} {{ nginx_compile_time_options_builtin_modules_str }} {{ nginx_compile_time_options_external_modules_paths_str }}
  args:
    chdir: /tmp/nginx-{{ nginx_version }}
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'
  notify: restart nginx

- name: NGINX | Make
  make:
    chdir: /tmp/nginx-{{ nginx_version }}
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'
  notify: restart nginx

- name: NGINX | Make install
  make:
    chdir: /tmp/nginx-{{ nginx_version }}
    target: install
  when: 'nginx_force_reinstall or nginx_check|failed or "nginx/{{ nginx_version }}" not in nginx_check.stderr'
  notify: restart nginx

- name: NGINX | Remove old upstart daemon script
  file:
    dest: /etc/init.d/nginx
    state: absent

- name: NGINX | Copy Daemon script
  template:
    src: nginx.service.j2
    dest: /lib/systemd/system/nginx.service
    mode: 0644
  notify: restart nginx
