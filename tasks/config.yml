---
- name: NGINX | Configuring user groups
  user:
    name: "{{ nginx_user }}"
    groups: "{{ nginx_groups|join(',') }}"
    append: yes

- name: NGINX | Create pid directory
  file:
    path: "{{ nginx_pid_path }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"

- name: NGINX | Create log directory
  file:
    path: "{{ nginx_log_path }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    recurse: yes

- name: NGINX | Update conf directory owner
  file:
    name: "{{ nginx_conf_path }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"

- name: NGINX | Copy server config
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0640"
  notify: restart nginx
  with_items:
    - "etc/nginx/nginx.conf"

- name: NGINX | Create directories
  file:
    path: "{{ nginx_conf_path }}{{ item }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
  with_items:
    - sites-available
    - sites-enabled
    - plugins

- name: NGINX | Copy logrotate config
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/nginx
    mode: 0644
    owner: root
    group: root

- name: NGINX | Copy prometheus lib
  copy:
    src: prometheus.lua
    dest: "{{ nginx_conf_path }}plugins/prometheus.lua"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"

- name: NGINX | Copy prometheus metric server conf
  template:
    src: prometheus.j2
    dest: "{{ nginx_conf_path }}sites-available/prometheus"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"

- name: NGINX | Enable prometheus metric server
  file:
    src: "{{ nginx_conf_path }}sites-available/prometheus"
    dest: "{{ nginx_conf_path }}sites-enabled/prometheus"
    state: link
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
  notify: reload nginx
