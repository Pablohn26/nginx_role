# PROMETHEUS METRIC
lua_shared_dict prometheus_metrics 10M;
lua_package_path "{{ nginx_conf_path }}/plugins/prometheus.lua";
init_by_lua '
    prometheus = require("prometheus").init("prometheus_metrics")
    metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status", "role"})
    metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host", "role"})
';
log_by_lua '
    local host = ngx.var.host:gsub("^www.", "")
    local role = "{{ nginx_prometheus_metrics_role }}"
    metric_requests:inc(1, {host, ngx.var.status, role})
    metric_latency:observe(ngx.now() - ngx.req.start_time(), {host, role})
    ';
